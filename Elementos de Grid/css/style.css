.grid{
    display: grid;
    border: 2px solid blue;
    width: 500px;
    height: 500px;
    grid-template: repeat(4, 1fr 2fr)/repeat(4, 3fr 2fr);
    gap: 5px;
}
/* Elementos de varias filas
Usando las propiedades CSS grid-row-starty grid-row-end, 
podemos hacer que los elementos de una sola cuadrícula ocupen 
varias filas. Recuerde, ya no estamos aplicando CSS al contenedor 
de cuadrícula exterior; ¡Estamos agregando CSS a los elementos que 
se encuentran dentro de la cuadrícula! */

/* Podemos usar la propiedad grid-row como abreviatura de 
grid-row-starty grid-row-end.  Los siguientes dos bloques 
de código producirán el mismo resultado:*/
.a{
    /* grid-row-start: 5;
    grid-row-end: 7; */

    /* grid-row: 5/7;
    grid-column: 1/ span 2; */
    grid-area: 5/1/span 2 / span 2;
}
/* Área de cuadrícula */
/* Ya hemos podido usar grid-rowy grid-columncomo abreviatura de
 propiedades como grid-row-starty grid-row-end. Podemos refactorizar 
 aún más usando la propiedad grid-area. Esta propiedad establecerá 
 las posiciones inicial y final tanto para las filas como para las 
 columnas de un elemento. */

/* grid-areatoma cuatro valores separados por barras. ¡El orden es 
importante! Así es como grid-area interpretará esos valores.

grid-row-start
grid-column-start
grid-row-end
grid-column-end */

/* .item {
    grid-area: 2 / 3 / 4 / span 5;
    }

  En el ejemplo anterior, el elemento comenzará en la fila 2y 
  terminará en la fila 4, aunque la cuarta fila en realidad no está 
  incluida, ¡solo las filas 2y 3! Luego, el elemento comenzará en la 
  columna 3y, en lugar de establecer un número para la columna en la 
  que terminará, queremos que este elemento tenga span 5columnas; 
  esto significa que el elemento incluirá las columnas 3, 4, 5, 6y 7.

  El uso grid-areaes una manera fácil de colocar elementos 
  exactamente donde los desea en una cuadrícula. */

.b{
    /* grid-row: 2/ span 3;
    grid-column: 2 / span 6; */
    grid-area: 2 / 2 / span 3 / span 6;
}
.c{
    grid-area: 6 / 8 / span 3 / span 1;
}
.box{
    background-color: beige;
    border: 1px solid dodgerblue;
    border-radius: 5px;
    color: black;
}